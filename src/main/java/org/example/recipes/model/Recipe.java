package org.example.recipes.model;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.fasterxml.jackson.annotation.JsonFormat;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.example.recipes.dao.converters.LocalDateTimeConverter;
import org.example.recipes.dao.converters.TypeConverter;
import org.springframework.format.annotation.DateTimeFormat;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import java.time.LocalDateTime;
import java.util.List;

@DynamoDBTable(tableName = "recipes")
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class Recipe {

    public enum Type {
        VEGAN,
        VEGETARIAN,
        CARNIVORE
    }

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String id;

    @DynamoDBTypeConverted(converter = LocalDateTimeConverter.class)
    @JsonFormat(pattern = "dd‐MM‐yyyy HH:mm")
    @DateTimeFormat(pattern = "dd‐MM‐yyyy HH:mm")
    private LocalDateTime created;

    @DynamoDBTypeConverted(converter = LocalDateTimeConverter.class)
    @JsonFormat(pattern = "dd‐MM‐yyyy HH:mm")
    @DateTimeFormat(pattern = "dd‐MM‐yyyy HH:mm")
    private LocalDateTime updated;

    @DynamoDBTypeConverted(converter = TypeConverter.class)
    @NotNull(message = "recipe.type is required")
    private Type type;

    @NotNull(message = "recipe.services is required")
    private int servings;

    @NotNull(message = "recipe.ingredients is required")
    private List<Ingredient> ingredients;

    @NotBlank(message = "recipe.instructions is required")
    private String instructions;
}
